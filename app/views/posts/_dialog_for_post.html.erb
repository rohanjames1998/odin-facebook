  <%# TODO! add close button to dialog %>
  <dialog data-comments-target="dialogBox">
    <div>
      <%= post.author.name %>
      <%= post.created_at%>
    </div>
    <%= post.text_content %>
    <div data-controller="likes button-changer">
    <% if post.likes.any? %>
      <p data-likes-target="likeCounter"><%= pluralize(post.likes.count, "Like") %></p>
    <% else %>
      <p data-likes-target="likeCounter"></p>
    <% end %>
    <%# Because our #already_liked? method takes a like object we pass a new like object without persisting it to db %>
    <% if already_liked?(Like.new(user_id: current_user.id, likeable_type: "Post", likeable_id: post.id))%>
      <%= button_to "Like", likes_path( like: {user_id: current_user.id, likeable_type: "Post", likeable_id: post.id, notification_attributes: {receiver_id: post.author.id, sender_id: current_user.id}}), data:{
        action: "likes#increaseCount button-changer#changeBtn",
        likes_target: "likeBtn",
        button_changer_target: "btn"
      }, class: "hidden", disabled: true, method: :post %>
      <%= button_to "Unlike", remove_like_path( user_id: current_user.id, likeable_type: "Post", likeable_id: post.id), data: {
        action: "likes#decreaseCount button-changer#changeBtn",
        button_changer_target: "btn",
        likes_target: "likeBtn"},
        method: :delete
        %>
    <% else %>
        <%= button_to "Like", likes_path( like: {user_id: current_user.id, likeable_type: "Post", likeable_id: post.id,notification_attributes: {receiver_id: post.author.id, sender_id: current_user.id}}), data:{
        action: "likes#increaseCount button-changer#changeBtn",
        likes_target: "likeBtn",
        button_changer_target: "btn"
      }, method: :post %>
         <%= button_to "Unlike", remove_like_path( user_id: current_user.id, likeable_type: "Post", likeable_id: post.id), data: {
          action: "likes#decreaseCount button-changer#changeBtn",
          button_changer_target: "btn",
          likes_target: "likeBtn"}, class: "hidden", disabled: true,
          method: :delete
          %>
    <% end %>
    </div>
    <div id="comments" data-comments-target="commentsCont">
      <% post.comments.includes(:replies).each do |comment| %>
        <div id="comment_<%= comment.id %>">
          <%# comment.text_content%>
          <%= render partial: "comments/comment", locals: { post: post, comment: comment}%>
        </div>
        <% if comment.replies.any? %>
          <% comment.replies.each_with_index do |reply, index|%>
          <%# Index is for visually indenting each reply as done below (see class)%>
            <div id="reply_<%= reply.id %>" class="m-[<%= index + 3 %>]px">
              <%= reply.text_content %>
            </div>
          <% end %>
        <% end %>
      <% end %>
    </div>
    <div>
      <%= form_with scope: :comment, url: comments_path, method: :post do |f| %>
        <%= f.hidden_field :post_id, value: post.id %>
        <%= f.text_area :text_content, data: { comments_target: "commentText" }%>
        <%= f.submit "Post Comment", data: { action: "comments#prependComment"} %>
      <% end %>
    </div>
  </dialog>
